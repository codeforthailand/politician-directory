{"version":3,"sources":["webpack://politician-directory/./src/components/peopleCardMini.js","webpack://politician-directory/./src/pages/representatives.js"],"names":["props","peopleInfo","css","Link","to","fields","slug","name","lastname","MPInfo","key","id","className","style","marginBottom","fontWeight","position","backgroundImage","politicianPicture","marginTop","cssH1","fontSize","cssSection","paddingTop","paddingBottom","h2","textAlign","cssEngTitle","margin","cssPageP","cssBarChart","data","house","loadCategoryStats","mp_type","gender","age","education","occupation_group","asset","keyMembers","label","map","keyPos","nameParts","split","slice","peopleSlug","join","votelogs","joinPeopleVotelog","allPeopleYaml","allPeopleVoteYaml","allVotelogYaml","pageStyles","background","title","party_ordinal","dangerouslySetInnerHTML","__html","formatOrdinalNumber","description","x","fontFamily","totalCount","length","voteLog","isCompact","width"],"mappings":"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","file":"component---src-pages-representatives-js-69331f9ec368db01f65f.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { politicianPicture } from \"../utils\"\n\nconst MPInfo = props => (\n  <div\n    css={{\n      fontFamily: \"var(--ff-text)\",\n      fontWeight: \"bold\",\n      fontSize: \"1.6rem\",\n      a: { color: \"inherit\" },\n      verticalAlign: \"center\",\n      height: \"100%\",\n    }}\n  >\n    <Link to={props.fields.slug}>{`${props.name} ${props.lastname}`}</Link>\n  </div>\n)\n\nconst PeopleCardMini = props => {\n  let peopleInfo = MPInfo(props)\n  return (\n    <div\n      key={props.id}\n      className={props.className}\n      css={{\n        display: \"block\",\n        flex: \"1 1 360px\",\n        fontSize: \"1.8rem\",\n        marginBottom: \"2rem\",\n      }}\n    >\n      <div style={{ marginBottom: \"1rem\", fontWeight: \"medium\" }}>\n        {props.position}\n      </div>\n      <div>\n        <Link to={props.fields.slug}>\n          <div\n            className=\"profile-picture\"\n            css={{\n              borderRadius: 84,\n              width: 41,\n              height: 41,\n              float: \"left\",\n              marginBottom: 0,\n              marginRight: \"1rem\",\n              border: \"2px solid var(--cl-black)\",\n              background: \"var(--cl-gray-2) no-repeat\",\n              backgroundSize: \"cover\",\n            }}\n            style={{\n              backgroundImage: `url(${politicianPicture(props)})`,\n            }}\n          ></div>\n        </Link>\n      </div>\n      <div style={{ marginTop: \"2rem\" }}>{peopleInfo}</div>\n    </div>\n  )\n}\n\nexport default PeopleCardMini\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {\n  loadCategoryStats,\n  joinPeopleVotelog,\n  peopleSlug,\n  formatOrdinalNumber,\n} from \"../utils\"\nimport StackedBarChart from \"../components/stackedBarChart\"\nimport { OfficialWebsite, InOfficeDate } from \"../components/profile\"\nimport PeopleCardMini from \"../components/peopleCardMini\"\nimport PartyGroupList from \"../components/partyGroupList\"\nimport VoteLogCard from \"../components/voteLogCard\"\n\nimport \"../styles/profile-book.css\"\n\nexport const query = graphql`\n  query {\n    house: partyYaml(party_type: { eq: \"สส\" }, is_active: { eq: true }) {\n      name\n      party_ordinal\n      description\n      established_date\n      dissolved_date\n      speaker\n      first_deputy_speaker\n      second_deputy_speaker\n      opposition_leader\n      website\n      facebook\n      twitter\n      is_active\n    }\n    allPeopleYaml(filter: { is_mp: { eq: true }, is_active: { eq: true } }) {\n      totalCount\n      edges {\n        node {\n          id\n        }\n      }\n    }\n    mp_type: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: mp_type) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    gender: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: gender) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    education: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: education) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    occupation_group: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: occupation_group) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    age: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          birthdate\n        }\n      }\n    }\n    asset: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          asset\n        }\n      }\n    }\n    allVotelogYaml(\n      filter: { is_active: { eq: true } }\n      sort: { fields: vote_date, order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          is_no_vote\n          no_vote_description\n          vote_date\n        }\n      }\n    }\n    allPeopleVoteYaml {\n      edges {\n        node {\n          id\n          votelog {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssPageP = {}\n\nconst cssBarChart = {\n  margin: \"1rem 0\",\n}\n\nconst RepresentativesPage = props => {\n  const { house, ...data } = props.data\n\n  const {\n    mp_type,\n    gender,\n    age,\n    education,\n    occupation_group,\n    asset,\n  } = loadCategoryStats(data)\n\n  const keyMembers = _.compact(\n    [\n      {\n        name: \"speaker\",\n        label: \"ประธานสภา\",\n      },\n      {\n        name: \"first_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 1\",\n      },\n      {\n        name: \"second_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 2\",\n      },\n      {\n        name: \"opposition_leader\",\n        label: \"ผู้นำฝ่ายค้าน\",\n      },\n    ].map((keyPos, id) => {\n      if (!house[keyPos.name]) return null\n      const nameParts = house[keyPos.name].split(\" \").slice(1)\n      const slug = peopleSlug(nameParts.join(\" \"))\n      const name = nameParts[0]\n      const lastname = nameParts.slice(1).join(\" \")\n      const position = keyPos.label\n      return { id, name, lastname, position, fields: { slug } }\n    })\n  )\n\n  const votelogs = joinPeopleVotelog(\n    data.allPeopleYaml,\n    data.allPeopleVoteYaml,\n    data.allVotelogYaml\n  )\n\n  return (\n    <Layout pageStyles={{ background: \"#eeeeee\" }}>\n      <SEO title=\"สมาชิกสภาผู้แทนราษฎรไทย\" />\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>\n              {house.name} ชุดที่ {house.party_ordinal}\n            </h1>\n            <h2 style={{ ...cssEngTitle }}>\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: formatOrdinalNumber(house.party_ordinal),\n                }}\n              />{\" \"}\n              House of Representative\n            </h2>\n            <h2 style={{ ...cssEngTitle }}>About</h2>\n            <p css={{ ...cssPageP }}>{house.description}</p>\n            <h2 css={{ ...cssEngTitle }}>Official Link</h2>\n            <OfficialWebsite {...house}></OfficialWebsite>\n            <h2 css={{ ...cssEngTitle }}>In Office</h2>\n            <InOfficeDate {...house}></InOfficeDate>\n            <h2 style={{ ...cssEngTitle }}>Key Members</h2>\n            {keyMembers.map(x => {\n              return (\n                <div className=\"peopleCard\" key={x.id}>\n                  <PeopleCardMini key={x.id} {...x} />\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"page\">\n            <h2\n              style={{\n                ...cssEngTitle,\n                marginTop: \"11.1rem\",\n                marginBottom: \"0rem\",\n              }}\n            >\n              Members\n            </h2>\n            <h2\n              style={{\n                ...cssEngTitle,\n                fontFamily: \"var(--ff-text)\",\n                fontWeight: \"normal\",\n              }}\n            >\n              สมาชิกสภาผู้แทนราษฏรจำนวน {data.allPeopleYaml.totalCount} คน\n            </h2>\n            <div css={{ width: \"100%\" }}>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={mp_type}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={gender}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={age}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={education}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={occupation_group}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={asset}></StackedBarChart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {votelogs.length > 0 ? (\n        <section css={{ ...cssSection, background: \"var(--cl-white)\" }}>\n          <div className=\"container\">\n            <h2 css={{ ...cssH1 }}>การลงมติล่าสุดของสภาผู้แทนราษฎร</h2>\n            <div\n              css={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"flex-start\",\n                flexWrap: \"wrap\",\n                marginTop: \"6rem\",\n              }}\n            >\n              {votelogs.map(({ id, fields, ...voteLog }) => (\n                <VoteLogCard\n                  isCompact\n                  key={id}\n                  css={{\n                    width: `calc((var(--container-width) - 4rem) / 2)`,\n                    margin: \"0 1rem 2rem 1rem\",\n                  }}\n                  slug={fields.slug}\n                  {...voteLog}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n\n      <section css={{ ...cssSection, background: \"#eeeeee\" }}>\n        <div className=\"container\">\n          <div>\n            <h3\n              css={{\n                fontSize: \"4.5rem\",\n                textAlign: \"center\",\n                marginTop: \"4rem\",\n              }}\n            >\n              สำรวจตามพรรคการเมือง\n            </h3>\n            <PartyGroupList />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default RepresentativesPage\n"],"sourceRoot":""}